class lab6{
	   //public Double a = a1;
	   //public Double tf = tf1;
	   //xyDataset = xy;
	   //xyDataset1 = xy1;
	   //xyDataset2 = xy2;

	   public static double l1 = Math.pow(5.0, 9.0);
	   public static double l2 = Math.pow(3.0, 8.0);
	   public static double M0 = 13.0;
	   public static double sig0 = 8.0;
	   public static double al0 = 0.12;
	public static void main(String[] args){ ; 

		run();
	}
	
	

	private static double func(int k, double X[], double sig, double A1, double A2)
	{
		int Ns = 10;
		double res = 0.0;
		
		for(int i = k; i < Ns + k + 1; i++)
			res = res + (X[i]*Math.sqrt(sig0/(sig*al0*A1))*A2*Math.pow(2.71, -A2*al0*(i-k)));
		res = res*1.0/Ns + M0;
		
		return res;
	}

	private static double Kz(double alz, double S)
	{
		double res;
		res = sig0*Math.pow(2.71, -alz*S);
		return res;
	}

	private static double approx(double alz, double K[])
	{
		double res = 0.0;
		for(int i = 0; i < 20; i++)
		{
			double k0;
			k0 = Kz(alz, i);
			res+= Math.abs(K[i] - k0);
		}
		return res;
	}

	private static double[] v(double Z[], double X[], double A1, double A2, double sigx, double K[])
	{
		double res[] = new double[4];

		double Mz, sigz, alz, rs;
		double del, del0;
		double step = 0.01;
		int count = 200, ind = 0;

		for(int i = 0; i < count; i++)
			Z[i] = func(i, X, sigx, A1, A2);
	
		Mz = 0.0;
		for(int i = 0; i < count; i++)
		{
			Mz+= Z[i];
			System.out.print("Mz[" + i + "] = " + Mz);
		}
		Mz/= (count);
		System.out.print("Mz = " + Mz);
		sigz = 0;
		for(int i = 0; i < count; i++)
			sigz+= Math.pow((Z[i] - Mz), 2.0);
		sigz/= (count);

		for(int i = ind; i < ind + 20; i++)
		{
			K[i-ind] = 0.0;
			for(int j = 0; j < count - i; j++)
				K[i-ind]+= (Z[j] - Mz)*(Z[i+j] - Mz);
			K[i-ind]/= (count-i);
		}

		alz = 0.1;
		del = approx(alz, K);
		del0 = approx(alz + step, K);

		if(del0 > del)
		{
			step = -step;
			del0 = approx(alz + step, K);
		}
		
		while(del0 < del)
		{
			del = del0;
			alz+= step;
			del0 = approx(alz + step, K);
		}

		rs = 0;
		if(((Math.abs(Mz - M0)/M0) * 100.0 - 10.0) > 0)
			rs = ((Math.abs(Mz - M0)/M0) * 100.0 - 10.0); 
		if(((Math.abs(sigz - sig0)/M0) * 100 - 10.0) > 0)
			rs = rs + (Math.abs(sigz - sig0)/M0) * 100 - 10.0;
		//if(((Math.abs(alz - al0)/al0) * 100 - 10.0) > 0)
		//	rs = rs + (Math.abs(alz - al0)/al0) * 100 - 10.0;

		res[0] = Mz;
		res[1] = sigz;
		res[2] = rs;
		//res[3] = alz;

		return res;
	}

	public static void run()
	{
		int count = 200;
		double e1, e2, e3;

		double res[] = new double[4];
		double X[] = new double[count+10];
		double Z[] = new double[count];
		double K[] = new double[20];                       

		double xtmp, rs, rs0;
		double Mx, sigx, al0;
		double Mz, sigz, alz;
		double step = 0.1;
		double A1 = 1.0, A2 = 1.0;
		al0 = 0.12;

		//XYSeries series1 = new XYSeries("График");
		//XYSeries series2 = new XYSeries("График");

		//xyDataset.removeAllSeries();
		//xyDataset1.removeAllSeries();
		//xyDataset2.removeAllSeries();
		X[0] = 1.0; //Double.parseDouble(tf.getText());
		xtmp = X[0];
		System.out.println("x: " + X[0] + "; l2: " + l2);
		X[0] = Math.round(((X[0]/l2) - 0.5)*1000.0)/1000.0;
		System.out.print("i = 0; x = " + X[0] + "\n");

		for(int i = 1; i < count+10; i++)
		{
			X[i] = (l1*xtmp) % l2;
			xtmp = X[i];
			X[i] = Math.round(((1.0*X[i]/l2) - 0.5)*1000.0)/1000.0;
			System.out.print("i = " + i + " ; x = " + X[i] + "\n");
		}
		
		Mx = 0.0;
		for(int i = 0; i < count; i++)
			Mx+= X[i];
		Mx/= count;
		sigx = 0;
		for(int i = 0; i < count; i++)
			sigx+= Math.pow((X[i] - Mx), 2.0);
		sigx/= count;
	
		do
		{
			res = v(Z, X, A1, A2, sigx, K);
			Mz = res[0];
			sigz = res[1];
			rs = res[2];
			alz = res[3];
			res = v(Z, X, A1+step, A2, sigx, K);
			rs0 = res[2];

			if(rs0 > rs)
			{
				step = -step;
				res = v(Z, X, A1+step, A2, sigx, K);
				rs0 = res[2];
			}

			while(rs0 < rs)
			{
				rs = rs0;
				A1+= step;
				Mz = res[0];
				sigz = res[1];
				alz = res[3];
				res = v(Z, X, A1+step, A2, sigx, K);
				rs0 = res[2];
			}
			
			res = v(Z, X, A1, A2, sigx, K);
			Mz = res[0];
			sigz = res[1];
			rs = res[2];
			alz = res[3];
			res = v(Z, X, A1, A2+step, sigx, K);
			rs0 = res[2];

			if(rs0 > rs)
			{
				step = -step;
				res = v(Z, X, A1, A2+step, sigx, K);
				rs0 = res[2];
			}

			while(rs0 < rs)
			{
				rs = rs0;
				A2+= step;
				Mz = res[0];
				sigz = res[1];
				alz = res[3];
				res = v(Z, X, A1, A2+step, sigx, K);
				rs0 = res[2];
			}

			System.out.print("M0 = " + M0 + "; Mz = " + Mz + "\n");
			System.out.print("sig0 = " + sig0 + "; sigz = " + sigz + "\n");
			e1 = (Math.abs(M0 - Mz)/M0) * 100.0; 
			e2 = (Math.abs(sig0 - sigz)/sig0) * 100;
			//e3 = (Math.abs(al0 - alz)/al0) * 100.0; 
			System.out.print(e1 + " " + e2 + " " + alz + "\n");
		} while((e1 > 10.0) || (e2 > 10.0));// || (e3 > 10.0));
		res = v(Z, X, A1, A2, sigx, K);
		res[0] = Mz;
		res[1] = sigz;

		for(int i = 0; i < count; i++)
		{
			System.out.print("i = " + i + " z = " + Z[i] + "\n");
			//series1.add(i, Z[i]);
		}
		//xyDataset.addSeries(series1);

		for(int i = 0; i < 20; i++)
		{
			System.out.print("i = " + i + " k = " + K[i] + "\n");
			//series2.add(i, K[i]);
		}
		//xyDataset1.addSeries(series2);

		System.out.print("M = " + Math.round(Mz*1000.0)/1000.0 + " sigma = " + Math.round(sigz*1000.0)/1000.0 + "\n");
		System.out.print("M0 = " + M0 + " sigma0 = " + sig0 + "\n");
	}
}
