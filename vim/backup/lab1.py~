#!/usr/bin/python
# -*- coding: UTF-8 -*-

from gi.repository import Gtk
import string

class MyWindow(Gtk.Window):
	def __init__(self):
		Gtk.Window.__init__(self, title = u"Лабораторная работа №1")
		self.set_default_size(600, 500)

		self.cont = Gtk.Box(orientation = Gtk.Orientation.HORIZONTAL)
		self.add(self.cont)
		self.sw = Gtk.ScrolledWindow()
		self.box = Gtk.Box(orientation = Gtk.Orientation.VERTICAL)
		self.cont.pack_start(self.box, True, True, 0)
		self.box2 = Gtk.Box(orientation = Gtk.Orientation.VERTICAL)
		self.sw.add_with_viewport(self.box2)

		self.btn_run = Gtk.Button(label = u"Выдать диагноз")
		self.box.pack_start(self.sw, True, True, 0)
		self.box.pack_start(self.btn_run, False, True, 0)

		self.textv = Gtk.TextView()
		self.sw_tv = Gtk.ScrolledWindow()
		self.cont.pack_start(self.sw_tv, True, True, 0)
		self.sw_tv.add(self.textv)

	def create_cbs(self, cbs_list):
		for desc, var_name in cbs_list:
			code = "self.cb_%s = Gtk.CheckButton(label=u'%s')\n" %(var_name, desc.decode(encoding="UTF-8").replace("_", " "))
			code += "self.box2.pack_start(self.cb_%s, True, True, 0)\n" %(var_name)
			#code += "self.cb_%s.show()\n" %(var_name)
			exec(code)
			print(cb_TOSCH.get_active())

var_replacement = []
with open("simptoms.txt") as f:
	for line in f:
		orig, var_name = line.split(" ")
		var_name = var_name.replace("\r", "")
		var_name = var_name.replace("\n", "")
		var_replacement.append( (orig, var_name) )

rules = []
with open("rules2.txt") as f:
	for rule in f:
		rule = rule.decode(encoding="UTF-8")
		rule = rule.replace(u"ЕСЛИ", "if")
		rule = rule.replace(u"ТО", ":")
		rule = rule.replace(u"И", "and")
		rule = rule.replace(u"да", "True")
		rule = rule.replace(u"болезнь", "DIAGNOSE")

		for s, v in var_replacement:
			s = s.decode(encoding="UTF-8")
			rule = rule.replace(s, v)

		rules.append(rule.encode(encoding="UTF-8"))

w = MyWindow()
w.create_cbs(var_replacement)
w.connect("delete-event", Gtk.main_quit)
w.show_all()
Gtk.main()

