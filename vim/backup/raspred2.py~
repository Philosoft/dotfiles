#!/usr/bin/python
# -*- coding: utf-8 -*-

from math import sqrt, pi

import alpha_n

# значения в кгс/м²
area_k = {
    'Ia': 17,
    'I': 23,
    'II': 30,
    'III': 38,
    'IV': 48,
    'V': 60,
    'VI': 73,
    'VII': 85
}

# defaults {
## табличные данные {
ro = 7850 # плотность стали [кг/м³]
## }

## будущие задаваемые значения{
wind_area = 'III' # выбирается пользователем
height = 2.0      # задаваемое значение (разрешённый на пока диспозон 2 - 10 м)
l = 3.765 # рабочая длина стойки = L + height / 2 [м], где L - расстояние от земли до низа щита TODO: пересчитать #вычисляемо
D = 325 * 10 ** (-3) # диаметр трубы # D и s выбираются в зависимости от типа трубы
s = 8 * 10 ** (-3) # толщина стенки
M = 1055 # масса рекламного щита [кг] # считается в зависимости от размеров 
## }

## СНиП [1] {
#### TODO: таблицы для выбора коэффициентов
W0 = 38.0
k = 0.75
c = 1.4
## }
# }

print '='*30
print 'Ветровой район %s, высота стойки %iм' %(wind_area, height)
print '\-труба: ф325х8'

print '= Геометрические характеристики ='
print 'Площадь:'
A = pi / 4 * (D**2 - (D - 2*s)**2)
print '  A = %f м²' %(A)
print 'Момент инерции при изгибе:'
Jx = Jy = (pi / 64.0) * (D**4 - (D - 2*s)**4)
print '  Jx = Jy = %10.10f м⁴' %(Jx)
Wx = Wy = 2.0 * Jx / D
print '  Wx = Wy = %f м³' %(Wx)
Jp = Jx / 2.0
print '  Jp = %f м⁴' %(Jp)
ix = iy = sqrt(Jx / A)
print '  ix = iy = %f м' %(ix)

print 'погонная масса:'
m = ro * A
print '  m = ρ * A = %f кг/м' %(m)

# TODO коэффициент k, типы местности, мб разный с разных сторон [1] п. 6.5
#      коэффициент c, п 6.6, приложение 4
#      W0 в зависимости от ветрового района
k = area_k[area]

Wm = W0 * k * c
print 'Wm = W0 * k * c = %f кг/м²' %(Wm)
print 'Считаем безразмерный параметр n:'
n = M / m / l
print '  n = %f' %(n)
print 'Выбираем α:'
alpha = 0.92 # FIXME: with ↓
#alpha = alpha_n.choose_alpha(n)
print '  α = %f' %(alpha)
print 'Считаем первую частоту собственных колебаний:'
E = 45388 # TODO: что это?
f1 = 1.0 / 2.0 / pi * alpha**2 / l**2 * sqrt(E**2 * Jx / m)
#print '  f1 = %f / (%f * %f) * (%f / %f) * sqrt( %f * %f / %f)' %(1.0, 2.0, pi, alpha, l, E, Jx, m)
print '  f1 = %f' %(f1)

# TODO: здесь выбор fl в зависимости от 
fl = 2.9
if f1 > fl:
    # TODO: табличка для выбора кси
    def foo(wm, ksi, nu):
        return wm * ksi * nu
    wm = foo
else:
    # TODO: hi в зависимости от эпсилон и дельта
    def foo(wm, ksi, hi, nu):
        return wm * ksi * nu * hi
    wm = foo
