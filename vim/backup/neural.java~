package neuralNet;

import java.lang.Math;
import java.util.Random;

public class neural
{
    private double[][] x;
    private double[] d;
    private double[] y = new double[8];
    private double[] w2 = new double[4];
    private double[][] w1 = new double[4][4];
    
    private double function_h(double[] x, double[] w, int length)
    {
        double result = 0.0;
        for(int i = 0; i < length; i++)
            result += x[i] * w[i];
            
        return result;
    }
    
    private double function_f(double h)
    {
        double result;
        result = 1.0 / (1 + Math.exp(-1.0 * h));
        
        return result;
    }
    
    private double function_E(double[] d, double[] y, int length)
    {
        double result = 0.0;
        for(int i = 0; i < length; i++)
            result+= Math.pow((d[i] - y[i]), 2.0);
            
        return result*0.5;
    }
    
    public neural()
    {
		System.out.println("neural constract start");
        Random rnd = new Random();
    
        double[][] tmpx =   {{0.0, 0.0, 0.0},
                             {0.0, 0.0, 1.0},
                             {0.0, 1.0, 0.0}, 
                             {0.0, 1.0, 1.0},
                             {1.0, 0.0, 0.0},
                             {1.0, 0.0, 1.0},
                             {1.0, 1.0, 0.0},
                             {1.0, 1.0, 1.0}};
             
        //double[] tmpd = {1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0};
		double[] tmpd = {0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0};
        
        x = tmpx;
        d = tmpd;
        
        for(int i = 0; i < 4; i++)
        {
            for(int j = 0; j < 4; j++)
                w1[i][j] = Math.round(rnd.nextDouble()*10000)/10000.0;
                
            w2[i] = Math.round(rnd.nextDouble()*10000)/10000.0;
        }

		System.out.println("neural constract end");
    }
    
    public void teaching()
    {
        double[][] h1 = new double[8][4];
        double[] h2 = new double[8];
        double[][] y1 = new double[8][4];
        double[][] del = new double[8][4];
        double[] delta = new double[8];
        double E = 0.0; 
        int count = 1;
        
        do
        {
            System.out.print("Шаг " + count + ":\n");
            for(int i = 0; i < 8; i++)
            {
                for(int j = 0; j < 4; j++)
                {
                    h1[i][j] = function_h(x[i], w1[j], 3);
                    y1[i][j] = function_f(h1[i][j]);
                }
                
                h2[i] = function_h(h1[i], w2, 3);
                y[i] = function_f(h2[i]);
                
                System.out.print("f[" + i + "] = " + Math.round(y[i]*1000)/1000.0 + "\n");
            }
            
            E = function_E(d, y, 8);
            
            for(int i = 0; i < 8; i++)
                delta[i]= (d[i] - y[i])*(function_f(h2[i] + 0.01) - y[i])/0.01;

            for(int i = 0; i < 4; i++)
                for(int j = 0; j < 8; j++)
                    w2[i]+= 0.2*delta[j]*h1[j][i];
                    
            for(int i = 0; i < 4; i++)
            {
                for(int j = 0; j < 8; j++)
                    del[j][i]= (function_f(h1[j][i] + 0.01) - y1[j][i])*delta[j]*w2[i]/0.01;
            }
            
            for(int i = 0; i < 4; i++)
                for(int j = 0; j < 4; j++)
                    for(int k = 0; k < 8; k++)
                        w1[i][j]+= 0.2*del[k][i]*x[k][j];
            
			System.out.println("HEHRE");
            System.out.print("Ошибка равна:" + Math.round(E*10000)/10000.0 + "\n====\n");
            count++;
        } while(E > 0.005);
    }
    
    public void calculate(double x1, double x2, double x3)
    {
        double[] x_now = new double[4];
        double[] h1 = new double[4];
        double[] y1 = new double[4];
        double h2, y_now;
        
        x_now[0] = x1;
        x_now[1] = x2;
        x_now[2] = x3;
        x_now[3] = 1.0;
        
        for(int i = 0; i < 4; i++)
        {
            h1[i] = function_h(x_now, w1[i], 3);
            y1[i] = function_f(h1[i]);
        }
        
        h2 = function_h(h1, w2, 3);
        y_now = function_f(h2);
        
        System.out.print("Введенные значения входных переменных:\n");
        
        for(int i = 0; i < 3; i++)
            System.out.print("х[" + (i+1) + "] = " + x_now[i] + "\n");
            
        System.out.print("Получившееся значение функции: у = " + Math.round(y_now*1000)/1000.0 + "\n");
    }
}
