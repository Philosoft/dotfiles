class SThread extends Thread
{
	private Integer n;
	private Double h;
	private double x[];
	private JTextArea area;
	private ChartPanel panel;
	private XYSeriesCollection xyDataset;
	
	SThread(Integer nn, Double hh, JTextArea ar, ChartPanel p, XYSeriesCollection col)
	{
		n = nn;
		h = hh;
		area = ar;
		panel = p;
		xyDataset = col;
		start();
	}
	
	private double f(double lam, double x, double u)
	{
		double result;
		result = (u*u + lam*x);
		return result;
	}
	
	private double integr(double lam)
	{
		double y[];
		y = new double[n+1];
		
		double dt, r;
		dt = 1.0/n;
		
		do
		{
			double I1, I2, I3;
		
			for(int i = 0; i < n+1; i++)
				y[i] = x[i];
				
			for(int i = 1; i < n; i++)
			{			
				I1 = f(lam, (y[i-1] + y[i])/2, (y[i] - y[i-1])/dt)*dt + f(lam, (y[i+1] + y[i])/2, (y[i+1] - y[i])/dt)*dt;
			
				I2 = f(lam, (y[i-1] + h + y[i])/2, (y[i] + h - y[i-1])/dt)*dt + f(lam, (y[i+1] + h + y[i])/2, (y[i+1] - y[i] - h)/dt)*dt;
				
				I3 = f(lam, (y[i-1] - h + y[i])/2, (y[i] - h - y[i-1])/dt)*dt + f(lam, (y[i+1] + y[i] - h)/2, (y[i+1] - y[i] + h)/dt)*dt;
			
				if(I2 < I1 && I2 < I3)
					x[i] = y[i] + h;
				else if(I3 < I1 && I3 < I2)
					x[i] = y[i] - h;
				else
					x[i] = y[i];
			}
			
			/*I1 = 0;
			I2 = 0;
			I3 = 0;
			for(int i = 1; i < n+1; i++)
			{
				I1 = I1 + f(lam, (x[i-1] + x[i])/2, (x[i] - x[i-1])/dt)*dt;
			
				I2 = I2 + f(lam + h, (x[i-1] + y[i])/2, (x[i] - x[i-1])/dt)*dt;
				
				I3 = I3 + f(lam - h, (x[i-1] + y[i])/2, (x[i] - x[i-1])/dt)*dt;
			}
			
			if(I1 > I2 && I1 > I3)
				lam = lam;
			else if(I3 > I1 && I3 > I2)
				lam = lam - h;
			else
				lam = lam + h;*/
			
			r = 0;
			for(int i = 0; i < n+1; i++)
				r = r + Math.abs(y[i] - x[i]);
		}while(r > 0);
		
		double integ;
		integ = (x[0] + x[n])/2;
		for(int i = 0; i < n; i++)
			integ = integ + x[i];
		integ = integ*dt;
		return integ;
	}
	
	public void run()
	{
		xyDataset.removeAllSeries();
		XYSeries series = new XYSeries("Experimental");
		XYSeries seriesx = new XYSeries("Analyth");
		area.setText("");
		
		for(double i = 0; i < 1.0001; i+=0.01)
		{
			double y;
			y = 3*i*i + 2*i + 1;
			seriesx.add(i, y);
		}
		xyDataset.addSeries(seriesx);
		panel.updateUI();
		
		double lam0, lam = 12.0;
		double dt = 1.0/n;
		double delta = 0.01;
		
		x = new double[n+1];
		
		x[0] = 1;
		x[n] = 6;
		
		for(int i = 1; i < n; i++)
			x[i] = (x[n] - x[0])/(n - i + 1);
			
		do
		{
			lam0 = lam;
			lam = lam0 - ((integr(lam0) - 3.0)/(integr(lam0+delta) - integr(lam0)))*delta;
		}while(Math.abs(lam-lam0) > 0.001);
			
		area.append(integr(lam) + "\n");
		
		for(int i = 0; i < n+1; i++)
		{
			area.append(i*dt + " " + x[i] + "\n");
			series.add(i*dt, x[i]);
		}
		xyDataset.addSeries(series);
		panel.updateUI();
	}
}
