Недавно задался таким необычным вопросом, как обустройство скринсейвера в шелле. На самом деле, мне был нужен не совсем скринсейвер, но сути дела это не меняет: после некоторого времени простоя в терминале должна выполниться заданная команда (а что уж она будет делать - дело десятое)

Итак, приступим. За костыли просьба сильно не пинать ^_^
<cut>
В zsh есть такая полезная переменная окружения как <b>TMOUT</b>. Цитата из <i>man zshall</i>:
<table class="highlighttable" id="1720"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="highlight"><pre><a name="line-1"></a>       TMOUT  If this parameter is nonzero, the shell  will  receive  an  ALRM
<a name="line-2"></a>              signal  if  a command is not entered within the specified number
<a name="line-3"></a>              of seconds after issuing  a  prompt.  If  there  is  a  trap  on
<a name="line-4"></a>              SIGALRM,  it will be executed and a new alarm is scheduled using
<a name="line-5"></a>              the value of the TMOUT parameter after executing the  trap.   If
<a name="line-6"></a>              no  trap  is  set, and the idle time of the terminal is not less
<a name="line-7"></a>              than the value of the TMOUT parameter, zsh  terminates.   Other?
<a name="line-8"></a>              wise  a  new  alarm is scheduled to TMOUT seconds after the last
<a name="line-9"></a>              keypress.
</pre></div>
</td></tr></table>

Т.е. через <b>$TMOUT</b> секунд бездействия шеллу будет передан сигнал <b>ALRM</b>. А на этот сигнал мы уже и можем поставить trap с каким угодно содержанием.

Казалось бы, вот оно, решение. Но что-то пошло не так.. Или руки у меня кривые, или звезды не так встали, или мы с авторами мана просто друг друга не поняли, но работало оно как описано в мане только если trap не была установлена. Если же trap была задана, zsh выполнял ее ровно через <b>$TMOUT</b> секунд после <u>выполнения последней команды</u>, а <u>не после последнего нажатия клавиши</u>, как должно быть в соответствии с моим пониманием мануала.

Вот тут и начинается мое главное костылестроение

Если фича работает как-то - это уже лучше, чем если бы она не работала никак, правда ведь? О:-) Ну я и приспособил ее к своим нуждам с использованием второй переменной окружения: <b>TTYIDLE</b> (она показывает время бездействия терминала в секундах, и как раз обнуляется при каждом нажатии клавиши). Простенькое сравнение времени простоя с эталоном, и в благоприятном случае - запуск нашего скринсейвера. Вот и всё.

Окончательный вариант (кусок ~/.zshrc) выглядит примерно так:
<table class="highlighttable" id="1721"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></div></td><td class="code"><div class="highlight"><pre><a name="line-1"></a><span class="nv">TMOUT</span><span class="o">=</span>60
<a name="line-2"></a><span class="c">#~      Каждые 60 секунд после ввода последней команды будет срабатывать SIGALRM</span>
<a name="line-3"></a><span class="c">#~      (trap 14) и будет проверяться условие</span>
<a name="line-4"></a> 
<a name="line-5"></a><span class="nv">IDLELIMIT</span><span class="o">=</span>360
<a name="line-6"></a><span class="c">#~      IDLELIMIT - максимальная величина idle к моменту проверки (замените на</span>
<a name="line-7"></a><span class="c">#~      удобное вам значение в секундах)</span>
<a name="line-8"></a>
<a name="line-9"></a><span class="nb">trap</span> <span class="s1">&#39;screensaver&#39;</span> 14
<a name="line-10"></a>screensaver<span class="o">()</span>
<a name="line-11"></a><span class="o">{</span>
<a name="line-12"></a>    <span class="k">if</span> &lt; <span class="nv">$TTYIDLE</span> -ge <span class="nv">$IDLELIMIT</span> &gt;
<a name="line-13"></a>        <span class="k">then</span>
<a name="line-14"></a>            <span class="c">#~ ??? Замените этот блок на собственный ???</span>
<a name="line-15"></a>            watch -n 1 tail -n 3 /var/log/wimax
<a name="line-16"></a>            <span class="nb">echo</span> -ne <span class="s2">"\e&lt;1;34;49m&lt;$USER&gt; \e&lt;1;32;49m$PWD# \e&lt;0m"</span>
<a name="line-17"></a>            <span class="c">#~ ??? Замените этот блок на собственный ???</span>
<a name="line-18"></a>    <span class="k">fi</span>
<a name="line-19"></a><span class="o">}</span>
</pre></div>
</td></tr></table>

Если вы не хотите, чтобы эта "красота" распространялась не на все сессии zsh - закомментируйте строку с TMOUT в zshrc и передавайте его по отдельности только нужным сессиям. У меня, к примеру, скринсейвер будет только в терминале стартующем вместе с WM, и терминалах, запускающихся из меню, но шеллы в IDE, файловом менеджере и tty-консолях "засыпать" не будут =)

А уж что выбрать в качестве "заставки" пусть подскажет ваша фантазия :) Как вариант: слежение за логами беспроводного соединения (представлено в примере выше), запуск ncmpc для слежения за mpd, запуск cacafire просто для красоты..