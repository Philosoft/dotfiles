#include <gtk/gtk.h>
#include <stdio.h>
#include <math.h>

//объявляем функцию, обработчик сигнала закрытия окна
static void destroy(GtkWidget*, gpointer);
//объявляем функцию, обработчки сигнала перерисовки окна
static void draw(GtkWidget*, GdkEventExpose*, gpointer);
//объявляем функцию, объявляющую область перерисовки недействительной
static gboolean time_handler(GtkWidget*);
//две переменные, смещение синусоиды и текущее положение точки графика
gint count = 0, t = 0;
double radianPerx = 2 * 3.14 / 90; //угол радиан, определяет расстояние между гребнями волн
const double uAmplit = 900; //амплитуда синусоиды

int main(int argc, char** argv){
    GtkWidget *window, *drawing;

    gtk_init(&argc, &argv);
    //создаем новое, обычное окно
    window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
    //задаем текст заголовка окна
    gtk_window_set_title(GTK_WINDOW(window), "Ololo");
    //запрещаем изменение размеров окна
    gtk_window_set_resizable(GTK_WINDOW(window), FALSE);
    //задаем размер окна
    gtk_widget_set_size_request(window, 600, 400);
    //задаем стартовую позицию - центр экрана
    gtk_window_set_position(GTK_WINDOW(window), GTK_WIN_POS_CENTER);
    //задаем отступы контейнера окна
    gtk_container_set_border_width(GTK_CONTAINER(window), 10);

    g_timeout_add(100, (GSourceFunc) time_handler, (gpointer) window);

    //создаем новую область для рисования
    drawing = gtk_drawing_area_new();
    //помещаем ее в контейнер окна
    gtk_container_add(GTK_CONTAINER(window), drawing);

    //связываем сигнал уничтожения окна и функцию-обработчик
    g_signal_connect(GTK_OBJECT(window), "destroy", G_CALLBACK(destroy), NULL);
    //связываем сигнал перерисовки области рисования и функцию-обработчик
    g_signal_connect(G_OBJECT(drawing), "expose_event", G_CALLBACK(draw), NULL);

    gtk_widget_show_all(window);
    gtk_main();
}

static void destroy(GtkWidget* window, gpointer data)
{
	//завершаем главный цикл приложения
	gtk_main_quit();
}

static gboolean time_handler(GtkWidget* widget)
{
  //если передан нулевой параметр - возвращаем ложь
  if (widget->window == NULL) return FALSE;
  //увеличиваем значение переменной смещения графика
  count++;
  //обнуляем точку положения на графике
  t = 0;
  //заставляем окно перерисоваться
  gtk_widget_queue_draw(widget);
  return TRUE;
}

static void draw(GtkWidget* drawarea, GdkEventExpose* event, gpointer data)
{
	char *buf; //текстовый буфер для хранения текста метки
	//создаем область для рисования Cairo
	cairo_t *cr = gdk_cairo_create(drawarea->window);
	//рисуем рамку, размером с область рисования
    cairo_rectangle (cr, event->area.x, event->area.y, event->area.width, event->area.height);
	//задаем толщину линии
	cairo_set_line_width (cr, 3);
	//задачем черный цвет
	cairo_set_source_rgb (cr, 0, 0, 0);
	//задаем толщину линии
	cairo_set_line_width (cr, 0.7);
	//задаем красный цвет и толщину линии
	cairo_set_source_rgb (cr, 1, 0, 0);
	cairo_set_line_width (cr, 4);
    cairo_move_to(cr, 40, 40);
    cairo_line_to(cr, 41, 41);
	cairo_stroke (cr);
}
