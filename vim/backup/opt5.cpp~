#include <iostream>
#include <fstream>
#include <string>
#include <math.h>
#include <stdlib.h>

/*
 * TODO:
 *  file i/o
 *  var names
 */
using namespace std;

int n = 3;
double *a;
double *x;
double h = 0.01;
double acc = 0.001;

double x2(double a1, double a2, double t)
{
    double result;
    result = 5*t + 1 + (t - 1)*t*pow(2.71, a1*t)*sin(a2*t);
    return result;
}

double x3(double a1, double a2, double a3, double t)
{
    double result;
    result = 5*t + 1 + (t - 1)*t*pow(2.71, a1*t)*sin(a2*t)/(a3*(t+5) - 1);
    return result; 
}

double x4(double a1, double a2, double a3, double a4, double t)
{
    double result;
    result = 5*t + 1 + (t - 1)*t*pow(2.71, a1*t)*sin(a2*t)/(a3*(t+5) + pow(2.71, a4*t));
    return result; 
}

double I2(double lam, double a1, double a2)
{
    double result, del;
    del = 0.01;
    result = (pow((x2(a1, a2, 0+del) - x2(a1, a2, 0))/del, 2) + lam*x2(a1, a2, 0) + pow((x2(a1, a2, 1+del) - x2(a1, a2, 1))/del, 2) + lam*x2(a1, a2, 1))/2;
    for(double i = h; i < 1; i+=h)
        result+= (pow((x2(a1, a2, i+del) - x2(a1, a2, i))/del, 2) + lam*x2(a1, a2, i));
    result = result*h;
    return result;
}

double I3(double lam, double a1, double a2, double a3)
{
    double result, del;
    del = 0.01;
    result = (pow((x3(a1, a2, a3, 0+del) - x3(a1, a2, a3, 0))/del, 2) + lam*x3(a1, a2, a3, 0) + pow((x3(a1, a2, a3, 1+del) - x3(a1, a2, a3, 1))/del, 2) + lam*x3(a1, a2, a3, 1))/2;
    for(double i = h; i < 1; i+=h)
        result+= (pow((x3(a1, a2, a3, i+del) - x3(a1, a2, a3, i))/del, 2) + lam*x3(a1, a2, a3, i));
    result = result*h;
    return result;
}

double I4(double lam, double a1, double a2, double a3, double a4)
{
    double result, del;
    del = 0.01;
    result = (pow((x4(a1, a2, a3, a4, 0+del) - x4(a1, a2, a3, a4, 0))/del, 2) + lam*x4(a1, a2, a3, a4, 0) + pow((x4(a1, a2, a3, a4, 1+del) - x4(a1, a2, a3, a4, 1))/del, 2) + lam*x4(a1, a2, a3, a4, 1))/2;
    for(double i = h; i < 1; i+=h)
        result+= (pow((x4(a1, a2, a3, a4, i+del) - x4(a1, a2, a3, a4, i))/del, 2) + lam*x4(a1, a2, a3, a4, i));
    result = result*h;
    return result;
}

int main(int argc, char **argv)
{
	
//`		xyDataset.removeAllSeries();
//`		XYSeries series = new XYSeries("Experimental");
//`		XYSeries seriesx = new XYSeries("Analyth");
    ofstream info("//tmp//info");
    ofstream plot("//tmp//plot");
		
		for(double i = 0; i < 1.0001; i+=0.01)
		{
			double y;
			y = 3*i*i + 2*i + 1;
			//seriesx.add(i, y);
		}
	//	xyDataset.addSeries(seriesx);
	//	panel.updateUI();
		
		if(n != 2 && n != 3 && n != 4)
		{
			info<<"Данное значение n не предусмотрено программой. Введите 2, 3 или 4.\n";
		}
		else
		{
			double r;
			double *a0, *a_old;
			bool flag = true;
			int st;
			double h2 = 0.01;
			
			a = new double[n+1];	
			a0 = new double[n+1];
			a_old = new double[n+1];
			st = (int) (1/0.01) + 1;
			x = new double[st];
			double I, I0;
			
			for(int i = 0; i < n+1; i++)
				a[i] = 0;
			a[n] = 12;
			a0[n] = 12;
				
			do
			{
				for(int i = 0; i < n+1; i++)
				{
					a_old[i] = a[i];
				}
				for(int i = 0; i < n; i++)
				{
					h2 = fabs(h2);
					a0[i] = a[i] + h2;
					
					if(n == 2)
					{
						I = I2(a[2], a[0], a[1]);
						I0 = I2(a0[2], a0[0], a0[1]);
					}
					else if(n == 3)
					{
						I = I3(a[3], a[0], a[1], a[2]);
						I0 = I3(a0[3], a0[0], a0[1], a0[2]);
					}
					else
					{
						I = I4(a[4], a[0], a[1], a[2], a[3]);
						I0 = I4(a0[4], a0[0], a0[1], a0[2], a0[3]);
					}
					
					if(I0 > I)
					{
						h2 = -h2;
						a0[i] = a[i] + h2;
						if(n == 2)
							I0 = I2(a0[2], a0[0], a0[1]);
						else if(n == 3)
							I0 = I3(a0[3], a0[0], a0[1], a0[2]);
						else
							I0 = I4(a0[4], a0[0], a0[1], a0[2], a0[3]);
					}
					
					while(I0 < I)
					{
						a[i] = a0[i];
						I = I0;
						a0[i] = a[i] + h2;
						if(n == 2)
							I0 = I2(a0[2], a0[0], a0[1]);
						else if(n == 3)
							I0 = I3(a0[3], a0[0], a0[1], a0[2]);
						else
							I0 = I4(a0[4], a0[0], a0[1], a0[2], a0[3]);
					}
					//cout<<"Текущий интеграл: "<<I<<"\n";
					a0[i] = a[i];
				}
				
				r = 0;
				for(int i = 0; i < n; i++)
					r+= fabs(a[i] - a_old[i]);
				if(r < acc && flag)
				{
					flag = false;
					r = acc + 0.1;
					h2 = h2/2;
				}
				else if(r > acc && !flag)
					flag = true;
			}while(r > acc);
			
			int k = 0;
			for(double i = 0; i < 1.01; i+=0.01)
			{
				if(n == 2)
					x[k] = x2(a[0], a[1], i);
				else if(n == 3)
					x[k] = x3(a[0], a[1], a[2], i);
				else
					x[k] = x4(a[0], a[1], a[2], a[3], i);
				info<<"t = "<<round(i*1000.0)/1000.0<<" ;\t x = "<<round(x[k]*1000.0)/1000.0<<"\n";
                plot<<round(i*1000.0)/1000.0<<" "<<round(x[k]*1000.0)/1000.0<<" "; 
				//series.add(i, x[k]);
				k++;
			}
			
			if(n == 2)
				I = I2(a[2], a[0], a[1]);
			else if(n == 3)
				I = I3(a[3], a[0], a[1], a[2]);
			else
				I = I4(a[4], a[0], a[1], a[2], a[3]);
			info<<"Интеграл равен: "<<round(I*1000.0)/1000.0<<"\n";
			
	 //   	xyDataset.addSeries(series);
	 //   	panel.updateUI();
		}
        plot.close();
        info.close();
    exit(EXIT_SUCCESS);
}
