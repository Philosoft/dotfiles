import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.BoxLayout;
import javax.swing.Box;
import javax.swing.JFrame;
import java.awt.Dimension;
import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

class SThread extends Thread
{
	public Double step;
	public Double acc;
	private JTextArea area;
	private ChartPanel panel;
	private XYSeriesCollection xyDataset;
	private Double x[];
	private Double y[];
	
	SThread(Double s, Double a, JTextArea ar, ChartPanel p, XYSeriesCollection col)
	{
		step = s;
		acc = a;
		area = ar;
		panel = p;
		xyDataset = col;
		start();
	}
	
	private double Koshi(double a)
	{
		int i = 1;
		double h = step;
		
		y[0] = a;
		
		for(double t = step; t < 1+step; t+=step)
		{
			double ky[], kx[], kox, koy;
			
			kx = new double[4];
			ky = new double[4];
			
			ky[0] = -0.5*(2*x[i-1] + 4*y[i-1] + 1);
			ky[1] = -0.5*(2*(x[i-1]) + 4*(y[i-1] + ky[0]*h/2) + 1);
			ky[2] = -0.5*(2*(x[i-1]) + 4*(y[i-1] + ky[1]*h/2) + 1);
			ky[3] = -0.5*(2*(x[i-1]) + 4*(y[i-1] + ky[2]*h) + 1);
			koy = (1.0/6.0)*(ky[0] + 2*ky[1] + 2*ky[2] + ky[3]);
			y[i] = y[i-1] + h*koy;
			
			kx[0] = y[i-1];
			kx[1] = (y[i-1] + kx[0]*h/2);
			kx[2] = (y[i-1] + kx[1]*h/2);
			kx[3] = (y[i-1] + kx[2]*h);
			kox = (1.0/6.0)*(kx[0] + 2*kx[1] + 2*kx[2] + kx[3]);
			x[i] = x[i-1] + h*kox;
			i++;
		}
		return x[i-1];
	}
	
	public void run()
	{
		double a0, a, pl;
		xyDataset.removeAllSeries();
		XYSeries series = new XYSeries("Experimental");
		XYSeries seriesx = new XYSeries("Analyth");
		area.setText("");
		
		for(double i = 0; i < 1.0001; i+=0.01)
		{
			double y;
			y = 0.5*(Math.pow(2.71, -i) + (1 + 2.71)*i*Math.pow(2.71, -i) - 1);
			seriesx.add(i, y);
		}
		xyDataset.addSeries(seriesx);
		panel.updateUI();
		
		a0 = 5.0;
		x = new Double[(int) (1/step) + 1];
		y = new Double[(int) (1/step) + 1];
		area.append("Решение задачи Коши:\n");
		
		x[0] = 0.0;
		double yn = 1/2.71, delta = 0.01;
		int n = 0;
		
		do
		{
			a = a0;
			a0 = a - ((Koshi(a) - yn)/(Koshi(a+delta) - Koshi(a)))*delta;
		}while(Math.abs(a0 - a) > acc);
		Koshi(a);
		
		for(double i = 0; i < 1+step; i+=step)
		{
			area.append("t = " + i + " ; x = " + x[n] + "\n");
			series.add(i, x[n]);
			n++;
		}
				
		xyDataset.addSeries(series);
		panel.updateUI();
		
		pl = Math.abs(Math.pow(y[0], 2) - Math.pow(x[0], 2) - x[0])*Math.pow(2.71, 0)/2;
		
		n = 1;
		for(double i = step; i < 1; i+=step)
		{
			pl = pl + Math.abs(Math.pow(y[n], 2) - Math.pow(x[n], 2) - x[n])*Math.pow(2.71, 2*i);
			n++;
		}
		pl = pl + Math.abs(Math.pow(y[n], 2) - Math.pow(x[n], 2) - x[n])*Math.pow(2.71, 2)/2;
		pl = pl*step;
		area.append("\nПолучившийся интеграл: " + pl + "\n");
	}
}

class Object
{
	public Double step;
	public Double acc;
	private JTextArea area;
	private ChartPanel panel;
	private XYSeriesCollection xyDataset;
	
	Object(JTextArea ta, ChartPanel p, XYSeriesCollection xy)
	{
		area = ta;
		panel = p;
		xyDataset = xy;
	}
	
	public void mainMethod()
	{
		try
		{
			SThread s = new SThread(step, acc, area, panel, xyDataset);
		}
		catch(Exception ex)
		{
			area.append("Something goes wrong. Reason: \n");
			area.append(ex + "\n");
		}
	}
}

class Wind extends JFrame
{
	private JLabel lbl[];
	private JTextField tf[];
	private JButton b;
	private JTextArea ta;
	private JScrollPane sp;
	private ChartPanel panel;
	private XYSeriesCollection xyDataset;
	
	class Listened implements ActionListener
	{
			public void actionPerformed(ActionEvent ae)
			{
				try
				{
					Object o = new Object(ta, panel, xyDataset);
				
					o.step = new Double(tf[0].getText());
					o.acc = new Double(tf[1].getText());
					o.mainMethod();
				}
				catch(Exception ex)
				{
					ta.append("Something goes wrong. Reason: \n");
					ta.append(ex + "\n");
				}
			}
	}
	
	Wind(String title)
	{
		super(title);
		
		lbl = new JLabel[3];
		tf = new JTextField[2];
		ta = new JTextArea("");
		b = new JButton("Calculate");
		
		lbl[0] = new JLabel("Step: ");
		lbl[1] = new JLabel("Accuracy: ");
		lbl[2] = new JLabel("Results: ");
		
		tf[0] = new JTextField("0.01");
		tf[1] = new JTextField("0.001");
		sp = new JScrollPane(ta);
		
		Container p = getContentPane();
        p.setLayout(new BoxLayout(p, BoxLayout.X_AXIS));
		
		Box box1 = Box.createHorizontalBox();
        Box box2 = Box.createHorizontalBox();
        Box box3 = Box.createHorizontalBox();
        Box box4 = Box.createHorizontalBox();
		Box box5 = Box.createHorizontalBox();
		Box box6 = Box.createVerticalBox();
		
		box6.add(Box.createVerticalStrut(20));
		lbl[0].setPreferredSize(new Dimension(150, 20));
        tf[0].setPreferredSize(new Dimension(180, 20));
        box1.add(Box.createHorizontalStrut(50));
        box1.add(lbl[0]);
        box1.add(Box.createHorizontalStrut(20));
        box1.add(tf[0]);
        box1.add(Box.createHorizontalStrut(50));
		box6.add(box1);
		
		box6.add(Box.createVerticalStrut(20));
		lbl[1].setPreferredSize(new Dimension(150, 20));
        tf[1].setPreferredSize(new Dimension(180, 20));
        box2.add(Box.createHorizontalStrut(50));
        box2.add(lbl[1]);
        box2.add(Box.createHorizontalStrut(20));
        box2.add(tf[1]);
        box2.add(Box.createHorizontalStrut(50));
		box6.add(box2);
		
		box6.add(Box.createVerticalStrut(20));
		lbl[2].setPreferredSize(new Dimension(350, 20));
        box3.add(Box.createHorizontalStrut(50));
        box3.add(lbl[2]);
        box3.add(Box.createHorizontalStrut(50));
		box6.add(box3);
		
		box6.add(Box.createVerticalStrut(20));
		sp.setPreferredSize(new Dimension(350, 400));
        box4.add(Box.createHorizontalStrut(50));
        box4.add(sp);
        box4.add(Box.createHorizontalStrut(50));
		box6.add(box4);
		
		box6.add(Box.createVerticalStrut(20));
		b.setPreferredSize(new Dimension(150, 20));
        box5.add(Box.createHorizontalStrut(50));
        box5.add(b);
        box5.add(Box.createHorizontalStrut(50));
		box6.add(box5);
		box6.add(Box.createVerticalStrut(20));
		
		//p.add(box6);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		b.addActionListener(new Listened());
		
		XYSeries series = new XYSeries("Analyth");
		
		for(double i = 0; i < 1.0001; i+=0.01)
		{
			double y;
			y = 0.5*(Math.pow(2.71, -i) + (1 + 2.71)*i*Math.pow(2.71, -i) - 1);
			series.add(i, y);
		}
		
		xyDataset = new XYSeriesCollection();
		xyDataset.addSeries(series);
		JFreeChart chart = ChartFactory.createXYLineChart("Plots", "t", "x", xyDataset, PlotOrientation.VERTICAL, true, true, true);	
		
		panel = new ChartPanel(chart);
		
		p.add(box6);
		p.add(Box.createHorizontalStrut(20));
		p.add(panel);
	}
}

class shoot
{
	public static void main(String args[])
	{
		Wind w = new Wind("Лабораторная работа №3");
        w.setSize(1000, 650);
        w.show();
	}
}