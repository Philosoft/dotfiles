<b>До gpl&#39;изации планируется</b> (помеченное * уже сделано): <ul><li>Защитить движок от маньяков, которые видели исходники</li>
<li>*Разделить движок на lib, shadow work и gui (подробнее под катом)</li>
<li>*Сделать исходники читабельными и написать коментарии</li>
<li>Сделать удобную систему для развёртывания</li></ul> <b>Планируется после gpl&#39;изации, с помощью 3-их лиц, но до релиза (сейчас стадия №1) :</b> 
Поддержка разных СУБД (сейчас только mysql)Оптимизация парсера тэговgui (web интерфейс) для подключения и отключения библиотек/модулей 
<cut>
 
А теперь раскрою схему проекта (а вы оцените).
 
<b>lib</b> - содержит все функции и классы, сейчас подключается всё сразу, в будущем - динамически
 
<b>shadow work</b> - теневые действия, не заметные пользователю, эти страницы существуют, но ничего не выводят, <a href="twork.php?wt=rateuser&amp;name=nvbn&amp;rate=p&amp;from=/users.php*qwname=nvbn">пример</a> (может позже поймёте что он делает :D)
 
<b>gui</b> - видимые страницы, которые направляют данные в SW , которые там и обрабатываются , <a href="worked.php?wt=newpost">пример</a>
 
Слои
 
Они не явные, но можно отследить слой <b>пользовательских данных</b>, <b>препроцессинга</b> и <b>вывода</b>
 
Как же всё оно работает
 
Рассмотрим на примере создания поста:
 
Составляются допустимые для пользователя значения (блоги в которые он может писать, есть ли у него доступ для написания)Выводится gui для написанияДанные отправляются на SWПодключаются библиотекиИдёт проверка на xss , инъекцию и можно ли вам это делатьПроходит через парсерЗаносится в слой &#34;пользовательских данных&#34;
 

 
Теперь вы хоть немного знаете о том, как 0byte работает)
 

 
И теперь вы поняли, как можно запутать поприетарным проектом :D
