#!/usr/bin/python
# -*- coding: UTF-8 -*-

from gi.repository import Gtk
import string

var_replacement = []
rules = []

class MyWindow(Gtk.Window):
	def __init__(self):
		Gtk.Window.__init__(self, title = "Лабораторная работа №1")
		self.set_default_size(600, 500)

		self.cont = Gtk.Box(orientation = Gtk.Orientation.HORIZONTAL)
		self.add(self.cont)
		self.sw = Gtk.ScrolledWindow()
		self.box = Gtk.Box(orientation = Gtk.Orientation.VERTICAL)
		self.cont.pack_start(self.box, True, True, 0)
		self.box2 = Gtk.Box(orientation = Gtk.Orientation.VERTICAL)
		self.sw.add_with_viewport(self.box2)

		self.btn_run = Gtk.Button(label = "Выдать диагноз")
		self.btn_run.connect("clicked", self.diagnose)
		self.box.pack_start(self.sw, True, True, 0)
		self.box.pack_start(self.btn_run, False, True, 0)

		self.textv = Gtk.TextView()
		self.sw_tv = Gtk.ScrolledWindow()
		self.cont.pack_start(self.sw_tv, True, True, 0)
		self.sw_tv.add(self.textv)

	def diagnose(self, widget):
		DIAGNOSE = ""
		# get all the simptomes
		code = ""
		for _, v in var_replacement:
			code += "global {0}\n".format(v)
		exec(code, globals(), locals())
		code = ""
		for _, v in var_replacement:
			code += "{0} = self.cb_{0}.get_active()\n".format(v)
		exec(code)
		exec("TOSCH, PVVR, PA = True, True, True")
		exec("print(TOSCH, PVVR, PA)")
		exec("print(TOSCH, PVVR, PA)\n" + rules[1] + "\nprint(DIAGNOSE)")
		exec('print(DIAGNOSE)')
		g = globals()
		g['DIAGNOSE'] = ''
		print(eval('DIAGNOSE'))
		print(rules[1])
		for rule in rules:
			# checking the rule
			exec(rule)
			exec('if DIAGNOSE != "": print("ololo")')

	def create_cbs(self, cbs_list):
		for desc, var_name in cbs_list:
			code = "self.cb_%s = Gtk.CheckButton(label='%s')\n" %(var_name, desc.replace("_", " "))
			code += "self.box2.pack_start(self.cb_%s, True, True, 0)\n" %(var_name)
			#code += "self.cb_%s.show()\n" %(var_name)
			exec(code)


with open("simptoms.txt") as f:
	for line in f:
		orig, var_name = line.split(" ")
		var_name = var_name.replace("\r", "")
		var_name = var_name.replace("\n", "")
		var_replacement.append( (orig, var_name) )

code = ""
for _, v in var_replacement:
	code += "global {0}\n".format(v)
	code += "{0} = False\n".format(v)

exec(code, globals())
print('::=> TOSCH =', TOSCH)

with open("rules.txt") as f:
	for rule in f:
		rule = rule.replace("ЕСЛИ ", "if ")
		rule = rule.replace(" ТО ", " : ")
		rule = rule.replace(" И ", " and ")
		#rule = rule.replace(" да ", " True ")
		rule = rule.replace(" да ", " ")
		rule = rule.replace(" == ", " ")
		rule = rule.replace(" болезнь ", " DIAGNOSE ")

		for s, v in var_replacement:
			rule = rule.replace(s, v)

		rules.append(rule)

w = MyWindow()
w.create_cbs(var_replacement)
w.connect("delete-event", Gtk.main_quit)
w.show_all()
Gtk.main()

