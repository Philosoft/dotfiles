# -*- coding: utf-8 -*-

'''Управление присутсвием в конференциях (вход/выход/список).
'''

import xmpp
from common import *

#{{{Комнаты для автовхода
#TODO: Сделать сохранение списка комнат
defrooms = [
				"welinux@conference.jabber.ru",
				"der_test@conference.jabber.ru",
			]
#}}}

#{{{Атрибуты плагина
attrs = {
		"enabled":True, #Плагин активен
		"shared":False, #Это общий плагин. Через него будут проходить все сообщения
		"public":False, #Плагин не публиный и не виден никому, кроме админов 
						#(но может работать, если shared)
		"aliases":(u'конфа', u'confa',), #Список алиасов этого плагина
		"presence":False,
		}
#}}}

def init(bot = None): #{{{Инициализация плагина
	message = 'Привет! Я просто бот, мешать никому не буду!..'
	for room in defrooms:
		print "Join " , room
		room_ = room + "/" + bot.config.nick
		inOutRoom(room_, bot, True)
		if not bot.config.silent:
			bot.send(xmpp.Message(room, message, 'chat'))

	#Возвращаем параметры плагина
	return attrs
#}}}

def run(mess, bot): #{{{Обработчик сообщений
	availibleCommands = {
		'join':'Войти в указанную комнату. \n\tПример: conference join room@server.ru',
		'help':'Помощь',
	}
	
	mess = mess.getBody()
	
	try:
		res = str(mess.split(' ')[1])
	except IndexError:
		res = 'Не указана команда! Для списка доступных команд отправьте \nconference help'
	else:
		if res == '':
			res = 'Не указана команда! Для списка доступных команд отправьте \nconference help'
	
	if res in availibleCommands.keys():
		if res == 'help':
			res = "Список доступных команд:\n"
			for k,v in availibleCommands.items():
				res += "%s → %s"%(k, v)
				res += "\n\n"
		elif res == 'join':
			res = inOutRoom(mess, bot)

	return res
#}}}

def inOutRoom(mess, bot, ar = False): #{{{Вход/выход
	if not ar:
		try:
			room = unicode(mess).split(' ')[2]
		except IndexError:
			return "Не указана конференция для входа"
	
		room += "/" + bot.config.nick
	else:
		room = mess

	bot.send(xmpp.Presence(to = room))
	return "Вошли!"
#}}}

